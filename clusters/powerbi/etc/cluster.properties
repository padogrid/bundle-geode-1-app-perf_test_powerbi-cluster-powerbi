# padogrid cluster properties.
# These properties pertain to all of the members belonging to the named cluster below.
# Cluster Creation Date: Mon Jan 29 12:27:14 EST 2024

# Cluster name
cluster.name=powerbi

# If standalone is enabled (true), then the cache server runs as a stanalone server
# and locators are ignored.
standalone.enabled=false

# The following properties are used only if the cluster is running on
# the local machine. For VM clusters, each locator and member must include
# their own properties.
cluster.bindAddress=localhost
cluster.hostnameForClients=localhost

# Pod properties
pod.name=local
pod.type=local

# Locator TCP start port number. The port number is incremented starting from this number.
locator.tcp.startPort=10334

# Member TCP start port number. The port number is incremented starting from this number.
tcp.startPort=40404

# Enable/disable member REST API
http.enabled=true
# Member REST API HTTP start port number. The port number is incremented starting from this number.
http.startPort=7080

# Enable/disable locator debugging
locator.debug.enabled=false
# The first locator's debug port number. The port number is incremented starting from this number.
locator.debug.startPort=9201

# Enable/disable member debugging
debug.enabled=true
# The first member's debug port number. The port number is incremented starting from this number.
debug.startPort=9101

# Enable/disable locator jmx
locator.jmx.enabled=false
# The first locator's JMX port number. The port number is incremented starting from this number.
locator.jmx.startPort=12101

# Enable/disable member jmx
jmx.enabled=true
# The first member's JMX port number. The port number is incremented starting from this number.
jmx.startPort=12001

# Enable/disable locator Prometheus
locator.prometheus.enabled=false
# The first locator's PROMETHEUS port number. The port number is incremented starting from this number.
locator.prometheus.startPort=8191

# Enable/disable member Prometheus
prometheus.enabled=true
# The first member's PROMETHEUS port number. The port number is incremented starting from this number.
prometheus.startPort=8091

# Locator heap min and max values
locator.heap.min=512m
locator.heap.max=512m

# Member heap min and max values
heap.min=1g
heap.max=1g

# JMX Manager port numbers
locator.jmx.manager.http.startPort=7070
locator.jmx.manager.startPort=9051

# GC logging flag. If true then GC information is logged.
gc.log.enabled=true
# Default GC log file flag. If true then GC information is logged in a separate log file.
gc.log.file.enabled=true

# Enable/disable Spring to bootstrap members. If enabled (true), then
# 'etc/application-context.xml' configures members. Note that Spring Data
# for Geode/GemFire is not part of PadoGrid distributions. If this property
# is set to true, then you must first run 'bin_sh/build_app' to download
# the required 'spring-data-gemfire' artifact before starting the cluster.
spring.bootstrap.enabled=false

# --- Pado properties.
# Pado properties have no effect unless PadoLite is enabled or this cluster
# is a full-blown Pado grid.

# PadoLite
# Enable/disable PadoLite. If enabled (true), then a Pado installation is required.
padolite.enabled=false

# PadoWeb
# PadoWeb properties are for PadoWeb only. Cluster members do not use them.
padoweb.host=localhost
padoweb.http.port=8080
padoweb.https.port=8443
padoweb.https.enabled=false
padoweb.contextPath=/
# ---

# Enable/disable VM cluster
vm.enabled=false
# A comma separated list of host names or addresses. IMPORTANT: No spaces allowed.
vm.locator.hosts=padomac.local
vm.hosts=padomac.local
# A comma-separated VM host names with NO spaces. VM_PUBLIC_HOSTS is
# required if VM_HOSTS has private hosts that cannot be reached from the
# machine where PadoGrid will be executed.
vm.public.hosts=
# SSH user name. If not specified then defaults to the shell login session user name.
vm.user=dpark
# Optional private key file path. You may use the private key file for AWS EC2, for example. 
# If not specified, then it defaults to VM_PRIVATE_KEY_FILE defined in the workspace's
# 'vmenv.sh' file.
#vm.privateKeyFile=${VM_PRIVATE_KEY_FILE}

